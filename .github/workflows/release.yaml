on: release
name: Build Release
jobs:
  release-linux-386:
    name: release linux/386
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Set env
      run: go env -w GO111MODULE=off
      
    - name: Set env GOARCH
      run: set GOARCH=386
      
    - name: Set env GOOS
      run: set GOOS=linux

    - name: Get goversioninfo
      run: go get github.com/josephspurrier/goversioninfo/cmd/goversioninfo
      
    - name: Install goversioninfo
      run: go install github.com/josephspurrier/goversioninfo/cmd/goversioninfo

    - name: Go Generate
      run: go generate

    - name: Build
      run: go build

    - name: Test
      run: go test
      
    - name: ls
      run: ls -la
 
    - name: create rel dir
      run: mkdir release; cp vulnrepo-ser* release/; cp conf.json release/;cp README.* release/;cd release/;mkdir reports;mkdir cert;mkdir vulnrepo-app;
 
    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
          cd release/; zip vulnrepo *
    - name: ls
      run: cd release/;ls -la
      
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./release/vulnrepo.zip
        asset_name: vulnrepo.zip
        asset_content_type: application/zip
 
